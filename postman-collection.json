{
	"info": {
		"name": "Automation Config Service API",
		"description": "Postman collection for ONDC Automation Config Service API endpoints. This service provides configuration data for various domains like retail, logistics, financial services, and travel.",
		"version": "1.0.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string",
			"description": "Base URL for the automation config service"
		},
		{
			"key": "domain",
			"value": "RET10",
			"type": "string",
			"description": "Domain code (e.g., RET10, FIS10, LOG10, TRV10)"
		},
		{
			"key": "version",
			"value": "v-1.2.5",
			"type": "string",
			"description": "API version (e.g., v-1.2.5, V-2.0.0, V-2.1.0)"
		},
		{
			"key": "usecase",
			"value": "GROCERY",
			"type": "string",
			"description": "Use case (e.g., GROCERY, FASHION, F&B)"
		},
		{
			"key": "flowId",
			"value": "flow1",
			"type": "string",
			"description": "Specific flow ID for mock endpoints"
		}
	],
	"item": [
		{
			"name": "UI Routes",
			"description": "Endpoints for UI-related configuration data",
			"item": [
				{
					"name": "Get Flows",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ui/flow?domain={{domain}}&version={{version}}&usecase={{usecase}}",
							"host": ["{{baseUrl}}"],
							"path": ["ui", "flow"],
							"query": [
								{
									"key": "domain",
									"value": "{{domain}}",
									"description": "Domain code (required)"
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "API version (required)"
								},
								{
									"key": "usecase",
									"value": "{{usecase}}",
									"description": "Use case (required)"
								}
							]
						},
						"description": "Retrieves flow configuration for a specific domain, version, and use case"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ui/flow?domain=RET10&version=v-1.2.5&usecase=GROCERY",
									"host": ["{{baseUrl}}"],
									"path": ["ui", "flow"],
									"query": [
										{ "key": "domain", "value": "RET10" },
										{ "key": "version", "value": "v-1.2.5" },
										{ "key": "usecase", "value": "GROCERY" }
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"data\": {\n    \"flows\": [\n      {\n        \"id\": \"flow1\",\n        \"description\": \"Sample flow\",\n        \"sequence\": []\n      }\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "Get Reporting Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ui/reporting?domain={{domain}}&version={{version}}",
							"host": ["{{baseUrl}}"],
							"path": ["ui", "reporting"],
							"query": [
								{
									"key": "domain",
									"value": "{{domain}}",
									"description": "Domain code (required)"
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "API version (required)"
								}
							]
						},
						"description": "Retrieves reporting status configuration for a specific domain and version"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ui/reporting?domain=RET10&version=v-1.2.5",
									"host": ["{{baseUrl}}"],
									"path": ["ui", "reporting"],
									"query": [
										{ "key": "domain", "value": "RET10" },
										{ "key": "version", "value": "v-1.2.5" }
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"data\": true\n}"
						}
					]
				},
				{
					"name": "Get Scenario Form Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ui/senario",
							"host": ["{{baseUrl}}"],
							"path": ["ui", "senario"]
						},
						"description": "Retrieves scenario form data configuration (no parameters required)"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ui/senario",
									"host": ["{{baseUrl}}"],
									"path": ["ui", "senario"]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"usecases\": [\n    {\n      \"domain\": \"RET10\",\n      \"version\": \"v-1.2.5\",\n      \"usecases\": [\"GROCERY\"]\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "API Service Routes",
			"description": "Endpoints for API service configuration data",
			"item": [
				{
					"name": "Get Supported Actions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-service/supportedActions?domain={{domain}}&version={{version}}",
							"host": ["{{baseUrl}}"],
							"path": ["api-service", "supportedActions"],
							"query": [
								{
									"key": "domain",
									"value": "{{domain}}",
									"description": "Domain code (required)"
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "API version (required)"
								}
							]
						},
						"description": "Retrieves supported actions configuration for a specific domain and version"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api-service/supportedActions?domain=RET10&version=v-1.2.5",
									"host": ["{{baseUrl}}"],
									"path": ["api-service", "supportedActions"],
									"query": [
										{ "key": "domain", "value": "RET10" },
										{ "key": "version", "value": "v-1.2.5" }
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"data\": {\n    \"supportedActions\": [\n      \"search\",\n      \"select\",\n      \"init\",\n      \"confirm\",\n      \"status\",\n      \"track\",\n      \"cancel\",\n      \"update\",\n      \"rating\",\n      \"support\"\n    ]\n  }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Mock Routes",
			"description": "Endpoints for mock data and testing",
			"item": [
				{
					"name": "Get Mock Flow",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/mock/flow?domain={{domain}}&version={{version}}&usecase={{usecase}}&flowId={{flowId}}",
							"host": ["{{baseUrl}}"],
							"path": ["mock", "flow"],
							"query": [
								{
									"key": "domain",
									"value": "{{domain}}",
									"description": "Domain code (required)"
								},
								{
									"key": "version",
									"value": "{{version}}",
									"description": "API version (required)"
								},
								{
									"key": "usecase",
									"value": "{{usecase}}",
									"description": "Use case (required)"
								},
								{
									"key": "flowId",
									"value": "{{flowId}}",
									"description": "Flow ID (required)"
								}
							]
						},
						"description": "Retrieves a specific mock flow by ID for testing purposes"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mock/flow?domain=RET10&version=v-1.2.5&usecase=GROCERY&flowId=flow1",
									"host": ["{{baseUrl}}"],
									"path": ["mock", "flow"],
									"query": [
										{ "key": "domain", "value": "RET10" },
										{ "key": "version", "value": "v-1.2.5" },
										{ "key": "usecase", "value": "GROCERY" },
										{ "key": "flowId", "value": "flow1" }
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"data\": {\n    \"id\": \"flow1\",\n    \"description\": \"Sample flow\",\n    \"sequence\": [\n      {\n        \"search\": {\n          \"key\": \"search\",\n          \"type\": \"request\",\n          \"pair\": \"on_search\",\n          \"unsolicited\": false,\n          \"description\": \"Search for products\"\n        }\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Flow Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/mock/flow?domain=RET10&version=v-1.2.5&usecase=GROCERY&flowId=nonexistent",
									"host": ["{{baseUrl}}"],
									"path": ["mock", "flow"],
									"query": [
										{ "key": "domain", "value": "RET10" },
										{ "key": "version", "value": "v-1.2.5" },
										{ "key": "usecase", "value": "GROCERY" },
										{ "key": "flowId", "value": "nonexistent" }
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"data\": null,\n  \"message\": \"No flow found with the given flowId\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Error Handling Examples",
			"description": "Examples of error responses and validation failures",
			"item": [
				{
					"name": "Missing Required Parameters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ui/flow?domain={{domain}}",
							"host": ["{{baseUrl}}"],
							"path": ["ui", "flow"],
							"query": [
								{
									"key": "domain",
									"value": "{{domain}}",
									"description": "Only domain provided, missing version and usecase"
								}
							]
						},
						"description": "Example of validation error when required parameters are missing"
					},
					"response": [
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ui/flow?domain=RET10",
									"host": ["{{baseUrl}}"],
									"path": ["ui", "flow"],
									"query": [{ "key": "domain", "value": "RET10" }]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"message\": \"version, usecase are required\"\n}"
						}
					]
				},
				{
					"name": "Server Error Example",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ui/flow?domain=INVALID&version=INVALID&usecase=INVALID",
							"host": ["{{baseUrl}}"],
							"path": ["ui", "flow"],
							"query": [
								{
									"key": "domain",
									"value": "INVALID",
									"description": "Invalid domain"
								},
								{
									"key": "version",
									"value": "INVALID",
									"description": "Invalid version"
								},
								{
									"key": "usecase",
									"value": "INVALID",
									"description": "Invalid usecase"
								}
							]
						},
						"description": "Example of server error when invalid configuration is requested"
					},
					"response": [
						{
							"name": "Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ui/flow?domain=INVALID&version=INVALID&usecase=INVALID",
									"host": ["{{baseUrl}}"],
									"path": ["ui", "flow"],
									"query": [
										{ "key": "domain", "value": "INVALID" },
										{ "key": "version", "value": "INVALID" },
										{ "key": "usecase", "value": "INVALID" }
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"body": "{\n  \"error\": true,\n  \"message\": \"Error while fetching flows\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					"// Set default values if variables are not set",
					"if (!pm.variables.get(\"baseUrl\")) {",
					"    pm.variables.set(\"baseUrl\", \"http://localhost:3000\");",
					"}",
					"",
					"// Log the request for debugging",
					"console.log(\"Making request to: \" + pm.variables.get(\"baseUrl\"));"
				],
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					"// Common tests for all requests",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test(\"Response has Content-Type header\", function () {",
					"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
					"});",
					"",
					"// Test for successful responses",
					"if (pm.response.code === 200) {",
					"    pm.test(\"Response is successful\", function () {",
					"        pm.response.to.have.status(200);",
					"    });",
					"    ",
					"    pm.test(\"Response has data property\", function () {",
					"        const responseJson = pm.response.json();",
					"        pm.expect(responseJson).to.have.property('data');",
					"    });",
					"}",
					"",
					"// Test for error responses",
					"if (pm.response.code === 400) {",
					"    pm.test(\"Error response has message\", function () {",
					"        const responseJson = pm.response.json();",
					"        pm.expect(responseJson).to.have.property('message');",
					"    });",
					"}"
				],
				"type": "text/javascript"
			}
		}
	]
}
